#########################################################################
#
# Device setup for the Arlec PC191HA Plug v2, as sold at Bunnings
# Reflash from Tuya to ESPHome with CloudCutter prior to using this code
#

   # Provides substitutions or variables that are then called elsewhere multiple times in the config
substitutions:
   # Default name 
  name: "arlec-pc19ha-v2-plug"
   # Default friendly name 
  friendly_name: "Arlec - Smart Plug v2 (PC191HA)"
   # Description as appears in ESPHome & top of webserver page
  device_description: "Arlec PC191HA v2 - Monitoring the power & energy of a device"
   # Project Name
  project_name: "Arlec.Smart Plug (PC191HA v2)"
   # Project Version
  project_version: "1.5.0"
   # Restore the relay (GPO switch) upon reboot to state:
  relay_restore_mode: RESTORE_DEFAULT_ON   # RESTORE_DEFAULT_ON
   # Set the update interval for sensors
  sensor_update_interval: 10s
   # Define logging level: NONE, ERROR, WARN, INFO, DEBUG (Default), VERBOSE, VERY_VERBOSE
  log_level: "DEBUG"

   # HLW8012 Power Monitoring Chip
   # Current Limit in Amps. AU Plug = 10. IL, BR, EU, UK, US Plug = 16.
  current_limit : "10"
   # https://community.home-assistant.io/t/esphome-install-does-not-update-firmware/544026/9?u=mahko_mahko
  initial_mode: "VOLTAGE"             # reports VOLTAGE or CURRENT first
  voltage_divider: "770.0"
  current_resistor: "0.0001"
  current_multiply: "0.4250"
   # If Watts are maringally out after applying the calculated settings above, then the following can be used to tweak the watts reported
  watts_factor: "1.0"
   # how many times to report before swapping between reporting Voltage or Current. Note that the first value reported should be ignored as inaccurate
  change_mode_every: "3"

########################## End of Substitutions #########################
#
# Combined with web_server settings in /common/base-configuration to
# define a network information group
#

web_server:
  version: 3
  sorting_groups:
  
    - id: group_electricity
      name: "Electricity Sensors"
      sorting_weight: -50

    - id: group_energy
      name: "Energy Sensors"
      sorting_weight: -40

    - id: group_controls
      name: "Controls"
      sorting_weight: -30


#####################################################################
#
# On Boot script to set dedault 'Power Mode' to "ALWAYS ON"
#
esphome:
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - lambda: |-
              switch(id(restore_mode))
              {
              case 1:{
                      id(relay).turn_on();
                      break;
                            }
              case 2:{
                      id(relay).turn_off();
                      break;
                            }
              default:{
                      break;
                            }
              }

#########################################################################
#
# Defines the bk72xx chip that is a cheaper alternative to an ESP828x
#

bk72xx:
  board: wb2s
  framework:
    version: dev

#########################################################################
#
# Remote Packages to be utilised
#

dashboard_import:
  package_import_url: github://roving-ronin/myhomeassistant/esphome/arlec-pc191ha-plug-v2.yaml@main
  import_full_config: false

packages:
  base-config: !include common/base-configuration.yaml
  wifi-config: !include common/network-wifi.yaml
  

#########################################################################
#
# Components and sensors defined in base-configuration.yaml that are
# to be to be disabled, as not compatible or needed with this device.
#

 # Remove Network section (IPv6), as not supported on this chipset
network: !remove

#####################################################################
#
# External Components
#

# Energy Statistics Components - Adds 'Platform - Energy Statistics'
# https://github.com/Roving-Ronin/myHomeAssistant/tree/main/components/energy_statistics

external_components:
#  - source: github://roving-ronin/myhomeassistant/components@statistics-partial-times
#    refresh: 0s
  - source:
      type: git
      url: https://github.com/roving-ronin/myhomeassistant/
      ref: main
    refresh: 0s
    components: [ energy_statistics ]
#########################################################################
#
# Used to store the Total kWh used (lifetime) between reboots
#

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0' 

  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "1"    # Default to "Always On"

############ Store Energy Component Readings #############
    
  - id: global_energy_today
    type: float
    restore_value: yes

  - id: global_energy_yesterday
    type: float
    restore_value: yes

  - id: global_energy_week
    type: float
    restore_value: yes

  - id: global_energy_month
    type: float
    restore_value: yes

  - id: global_energy_year
    type: float
    restore_value: yes

    
#####################################################################
#
# Select - To allow setting power on state from the GUI
#

select:
  - platform: template
    name: "Power On State"
    id: "power_mode"
    optimistic: true
    icon: "mdi:electric-switch"
    options:
      - Always On
      - Always Off
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(restore_mode)=i+1;
    web_server:
      sorting_group_id: group_controls
      sorting_weight: 3


#########################################################################
#
# PC191HA basic switch operation - button, relay and LED
#
    # button is momentary on - shows "on" in HA except for the moment the button is being pressed
    # LED should have same on/off state as the relay.  
    # there is also a wifi_LED, but it is not seen from outside the case

binary_sensor:

  - platform: gpio
    pin: P11
    name: "Power Button"
    id: power_button
    disabled_by_default: true
    device_class: power
     # when button is pressed, toggle the switch on/off
    on_press:
      then:
        - switch.toggle: relay
    internal: true

#########################################################################
#
# PC191HA includes a BL0937 chip for measuring power consumption
# and BL0937 is a variation of hlw8012, but using inverted SEL pin functionality
#
sensor:

  - platform: hlw8012
    model: BL0937     # note that the model must be specified to use special calculation parameters
    sel_pin:          # I believe that cf_pin reports either Voltage or Current depending on this select pin
      inverted: true  # determine whether true reports Voltage
      number: P24
    cf_pin:           # current or voltage (ele_pin: 7)
      inverted: true  # the logic of BL0937 is opposite from HLW8012
      number: P7
    cf1_pin:          #  Power (vi_pin: 8)
      inverted: true  # the logic of BL0937 is opposite from HLW8012
      number: P8
     # How often to measure and report values
    update_interval: ${sensor_update_interval}

#########################################################################
#
# Notes:
#   PC191HA measures and returns Voltage OR Current according to the 
#   value of sel_pin, but it can change the value of sel_pin periodically.

#    initial_mode: ${initial_mode}           # reports VOLTAGE or CURRENT
    change_mode_every: ${change_mode_every}  # how many times to report before swapping between
                                             # reporting Voltage or Current. Note that the first value reported should be ignored as inaccurate

     # Adjust according to the actual resistor values on board to calibrate the specific unit
    voltage_divider:  ${voltage_divider}     # LOWER VALUE GIVES LOWER VOLTAGE
    current_resistor: ${current_resistor}    # HIGHER VALUE GIVES LOWER WATTAGE

#########################################################################
#
# Notes:
#   Except that the pc191ha doesn't follow that formula.
#   Setting current_resistor to give an accurate Amperage does NOT also give the correct Wattage
#   See calculator at: https://esphome.io/components/sensor/hlw8012.html

    power:
      name: Active Power
      id: active_power
      unit_of_measurement: W
      accuracy_decimals: 1
      filters:
        - multiply: ${watts_factor}
        - skip_initial: 2
      icon: mdi:power
      web_server:
        sorting_group_id: group_electricity
        sorting_weight: 1
    
    current:
      name: "Current"
      id: current
      unit_of_measurement: A
      accuracy_decimals: 2
      icon: mdi:current-ac      
      filters:
        - multiply: ${current_multiply}
      on_value_range:
        - above: ${current_limit}
          then:
            - switch.turn_off: relay
      web_server:
        sorting_group_id: group_electricity
        sorting_weight: 2

    voltage:
      name: Voltage
      id:   voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      icon: mdi:sine-wave 
      filters:
        - skip_initial: 2
      web_server:
        sorting_group_id: group_electricity
        sorting_weight: 3

     # Shows the Energy kWh since the device was last booted
    energy:
      name: "Energy"
      id: energy
      unit_of_measurement: kWh
      accuracy_decimals: 3
      filters:
         # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(energy_total_sensor).update();
      internal: true

#####################################################################
#
# Function added by the Energy Statistic Components
#

     # Energy Statistic Components - Define the id of the sensor tracking 'Total Energy' used
  - platform: "energy_statistics"
    id: energy_statistics_component
    total: energy_total_sensor
    
     # Energy Statistic Components - Adds Energy Today. Persistents if restarted, unlike 'total_daily_energy'
    energy_today:
      id: total_energy_today_sensor
      on_value:
        then:
          - lambda: |-
              id(global_energy_today) = x;
      internal: true

     # Energy Statistics Components - Adds Energy Yesterday
    energy_yesterday:
      id: total_energy_yesterday_sensor
      on_value:
        then:
          - lambda: |-
              id(global_energy_yesterday) = x;
      internal: true

     # Energy Statistics Components - Adds Energy Week
    energy_week:
      id: total_energy_week_sensor
      on_value:
        then:
          - lambda: |-
              id(global_energy_week) = x;
      internal: true

     # Energy Statistics Components - Adds Energy Month
    energy_month:
      id: total_energy_month_sensor
      on_value:
        then:
          - lambda: |-
              id(global_energy_month) = x;
      internal: true

     # Energy Statistics Components - Adds Energy Year
    energy_year:
      id: total_energy_year_sensor
      on_value:
        then:
          - lambda: |-
              id(global_energy_year) = x;
      internal: true


  ################################################################################
  #
  #  Publishes the above sensors, by calling the readings stored in the Globals
  #

  # Energy Statistic Sensors

  - platform: template
    name: "Energy - Today"
    id: energy_today
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: total_increasing
    accuracy_decimals: 3
    icon: "mdi:hours-24"
    lambda: |-
      return id(global_energy_today);
    update_interval: 10s
    web_server:
      sorting_group_id: group_energy
      sorting_weight: 1
        
  - platform: template
    name: "Energy - Yesterday"
    id: energy_yesterday
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: total_increasing
    accuracy_decimals: 3
    icon: "mdi:calendar-today"
    lambda: |-
      return id(global_energy_yesterday);
    update_interval: 10s
    web_server:
      sorting_group_id: group_energy
      sorting_weight: 2

  - platform: template
    name: "Energy - Week"
    id: energy_week
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: total_increasing
    accuracy_decimals: 3
    icon: "mdi:calendar-week"
    lambda: |-
      return id(global_energy_week);
    update_interval: 10s
    web_server:
      sorting_group_id: group_energy
      sorting_weight: 3

  - platform: template
    name: "Energy - Month"
    id: energy_month
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: total_increasing
    accuracy_decimals: 3
    icon: "mdi:calendar-month"
    lambda: |-
      return id(global_energy_month);
    update_interval: 10s
    web_server:
      sorting_group_id: group_energy
      sorting_weight: 4

  - platform: template
    name: "Energy - Year"
    id: energy_year
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: total_increasing
    accuracy_decimals: 3
    icon: "mdi:calendar-text"
    lambda: |-
      return id(global_energy_year);
    update_interval: 10s
    web_server:
      sorting_group_id: group_energy
      sorting_weight: 5

#########################################################################

     # Shows the TOTAL/Lifetime Energy kWh used by the device, may reset to zero upon firmware updates
  - platform: template
    name: "Energy - Total"
    id: energy_total_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    accuracy_decimals: 3
    lambda: |-
      return id(total_energy);
    web_server:
      sorting_group_id: group_energy
      sorting_weight: 6
    

#########################################################################
# PC191HA basic switch operation - button, relay and LED
#

 # The power relay, controls the socket being On/Off
switch:          
  - platform: gpio
    name: "GPO Switch"
    pin: P6
    id: relay
    restore_mode: "${relay_restore_mode}"   # default when power is turned on
    icon: mdi:power-socket-au
     # synchronise the LED with the relay
    on_turn_on:
      then:
        - light.turn_on: button_led
    on_turn_off:
      then:
        - light.turn_off: button_led
    web_server:
      sorting_group_id: group_controls
      sorting_weight: 1

light:
  - platform: status_led
    name: "GPO Status LED"
    id: button_led
    restore_mode: RESTORE_AND_OFF
    disabled_by_default: true
    pin:
      number: GPIO26
    icon: "mdi:lightbulb-outline"
    web_server:
      sorting_group_id: group_controls
      sorting_weight: 2
