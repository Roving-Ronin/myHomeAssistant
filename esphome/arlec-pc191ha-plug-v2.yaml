#########################################################################
#
# Device setup for the Arlec PC191HA Plug v2, as sold at Bunnings
# Reflash from Tuya to ESPHome with CloudCutter prior to using this code
#

   # Provides substitutions or variables that are then called elsewhere multiple times in the config
substitutions:
   # Default name 
  name: "arlec-pc19ha-v2-plug"
   # Default friendly name 
  friendly_name: "Arlec - Smart Plug v2 (PC191HA)"
   # Description as appears in ESPHome & top of webserver page
  device_description: "Arlec PC191HA v2 - Monitoring the power & energy of a device"
   # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc  
  location: ""
   # Project Name
  project_name: "Arlec.Smart Plug (PC191HA v2)"
   # Project Version
  project_version: "1.2.0"
   # The phase in the home power supply, upon which this plug is utilsed. 1p = A. 3p = A, B or C.  (myHome GPO 1 = Phase C, GPO 2 = Phase A, GPO 3 = Phase B)
  power_circuit: "TBC"  
   # Restore the relay (GPO switch) upon reboot to state:
  relay_restore_mode: RESTORE_DEFAULT_ON   # RESTORE_DEFAULT_ON
   # Set the update interval for sensors
  sensor_update_interval: 10s

   # HLW8012 Power Monitoring Chip
   # Current Limit in Amps. AU Plug = 10. IL, BR, EU, UK, US Plug = 16.
  current_limit : "10"
   # https://community.home-assistant.io/t/esphome-install-does-not-update-firmware/544026/9?u=mahko_mahko
  initial_mode: "VOLTAGE"             # reports VOLTAGE or CURRENT first
  voltage_divider: "770.0"
  current_resistor: "0.0001"
  current_multiply: "0.4250"
   # If Watts are maringally out after applying the calculated settings above, then the following can be used to tweak the watts reported
  watts_factor: "1.0"
   # how many times to report before swapping between reporting Voltage or Current. Note that the first value reported should be ignored as inaccurate
  change_mode_every: "3"

########################## End of Substitutions #########################
#
# On Boot script to set dedault 'Power Mode' to "ALWAYS ON"
#
esphome:
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - lambda: |-
              switch(id(restore_mode))
              {
              case 1:{
                      id(relay).turn_on();
                      break;
                            }
              case 2:{
                      id(relay).turn_off();
                      break;
                            }
              default:{
                      break;
                            }
              }

#########################################################################
#
# Defines the bk72xx chip that is a cheaper alternative to an ESP828x
#

bk72xx:
  board: wb2s
  framework:
    version: dev

#########################################################################
#
# Remote Packages to be utilised
#

dashboard_import:
  package_import_url: github://roving-ronin/myhomeassistant/esphome/arlec-pc191ha-plug-v2.yaml@main
  import_full_config: false

packages:
  base-config: !include common/base-configuration.yaml
  wifi-config: !include common/network-wifi.yaml
  

#########################################################################
#
# Components and sensors defined in base-configuration.yaml that are
# to be to be disabled, as not compatible or needed with this device.
#

 # Remove Network section (IPv6), as not supported on this chipset
network: !remove

#####################################################################
#
# External Components
#

# Dentra Components - Adds 'Platform - Energy Statistics'

# https://github.com/dentra/esphome-components/tree/master/components/energy_statistics
external_components:
  - source: github://roving-ronin/myhomeassistant/components@main
    refresh: 0s

#########################################################################
#
# Enable Home Assistant API
#

api:
  # Define service that calls the 'button:' defined below to reset the energy readings
  services:
    - service: reset_total_energy
      then:
        - button.press:
            id: button_reset_energy_statistics

#########################################################################
#
# Button - Function to allow resetting energy readings to ZERO
#

button:
  #  Reset the total energy entity (Gas - Current Reading)
  - platform: template
    name: 'Reset - Energy Statistics'
    id: button_reset_energy_statistics
    entity_category: config
    icon: 'mdi:trash-can-outline'
    on_press:
      - lambda: |-
          // Reset the energy statistics, as stored by the custom components
          id(energy_statistics_component).reset_statistics();

#########################################################################
#
# Used to store the Total kWh used (lifetime) between reboots
#

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0' 

  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "1"    # Default to "Always On"

#########################################################################
#
# PC191HA basic switch operation - button, relay and LED
#
    # button is momentary on - shows "on" in HA except for the moment the button is being pressed
    # LED should have same on/off state as the relay.  
    # there is also a wifi_LED, but it is not seen from outside the case

binary_sensor:

  - platform: gpio
    pin: P11
    name: "Power Button"
    id: power_button
    disabled_by_default: true
    device_class: power
     # when button is pressed, toggle the switch on/off
    on_press:
      then:
        - switch.toggle: relay
    internal: true

#########################################################################
#
# PC191HA includes a BL0937 chip for measuring power consumption
# and BL0937 is a variation of hlw8012, but using inverted SEL pin functionality
#
sensor:

  - platform: hlw8012
    model: BL0937     # note that the model must be specified to use special calculation parameters
    sel_pin:          # I believe that cf_pin reports either Voltage or Current depending on this select pin
      inverted: true  # determine whether true reports Voltage
      number: P24
    cf_pin:           # current or voltage (ele_pin: 7)
      inverted: true  # the logic of BL0937 is opposite from HLW8012
      number: P7
    cf1_pin:          #  Power (vi_pin: 8)
      inverted: true  # the logic of BL0937 is opposite from HLW8012
      number: P8
     # How often to measure and report values
    update_interval: ${sensor_update_interval}

#########################################################################
#
# Notes:
#   PC191HA measures and returns Voltage OR Current according to the 
#   value of sel_pin, but it can change the value of sel_pin periodically.

#    initial_mode: ${initial_mode}           # reports VOLTAGE or CURRENT
    change_mode_every: ${change_mode_every}  # how many times to report before swapping between
                                             # reporting Voltage or Current. Note that the first value reported should be ignored as inaccurate

     # Adjust according to the actual resistor values on board to calibrate the specific unit
    voltage_divider:  ${voltage_divider}     # LOWER VALUE GIVES LOWER VOLTAGE
    current_resistor: ${current_resistor}    # HIGHER VALUE GIVES LOWER WATTAGE

#########################################################################
#
# Notes:
#   Except that the pc191ha doesn't follow that formula.
#   Setting current_resistor to give an accurate Amperage does NOT also give the correct Wattage
#   See calculator at: https://esphome.io/components/sensor/hlw8012.html

    power:
      name: Active Power
      id: active_power
      unit_of_measurement: W
      accuracy_decimals: 1
      filters:
        - multiply: ${watts_factor}
        - skip_initial: 2
      icon: mdi:power
      web_server_sorting_weight: 1
    
    current:
      name: "Current"
      id: current
      unit_of_measurement: A
      accuracy_decimals: 2
      icon: mdi:current-ac      
      filters:
        - multiply: ${current_multiply}
      on_value_range:
        - above: ${current_limit}
          then:
            - switch.turn_off: relay
      web_server_sorting_weight: 2

    voltage:
      name: Voltage
      id:   voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      icon: mdi:sine-wave 
      filters:
        - skip_initial: 2
      web_server_sorting_weight: 3

     # Shows the Energy kWh since the device was last booted
    energy:
      name: "Energy"
      id: energy
      unit_of_measurement: kWh
      accuracy_decimals: 3
      filters:
         # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(energy_total_sensor).update();
      internal: true

#####################################################################
#
# Function added by the Dentra Components
#

     # Dentra Components - Define the id of the sensor tracking 'Total Energy' used
  - platform: "energy_statistics"
    id: energy_statistics_component
    total: energy_total_sensor

     # Dentra Components - Adds Energy Today. Persistents if restarted, unlike 'total_daily_energy'
    energy_today:
      name: "Energy Today"
      id: total_energy_today
      accuracy_decimals: 3
      icon: mdi:hours-24
      web_server_sorting_weight: 4

     # Dentra Components - Adds Energy Yesterday
    energy_yesterday:
      name: "Energy Yesterday"
      id: total_energy_yesterday
      accuracy_decimals: 3
      icon: mdi:calendar-today
      web_server_sorting_weight: 5

     # Dentra Components - Adds Energy Week
    energy_week:
      name: "Energy Week"
      id: total_energy_week
      accuracy_decimals: 3
      icon: mdi:calendar-week
      web_server_sorting_weight: 6

     # Dentra Components - Adds Energy Month
    energy_month:
      name: "Energy Month"
      id: total_energy_month
      accuracy_decimals: 3
      icon: mdi:calendar-month
      web_server_sorting_weight: 7

    energy_year:
      name: "Energy Year"
      id: total_energy_year
      accuracy_decimals: 3
      icon: "mdi:calendar-text"
      web_server_sorting_weight: 8

#########################################################################

     # Shows the TOTAL/Lifetime Energy kWh used by the device, may reset to zero upon firmware updates
  - platform: template
    name: "Energy Total"
    id: energy_total_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    accuracy_decimals: 3
    lambda: |-
      return id(total_energy);
    web_server_sorting_weight: 9
    
     # Shows the Energy kWh for the current day
#  - platform: total_daily_energy
#    name: "Energy Total Today"
#    id: energy_total_today
#    restore: true
#    power_id: active_power
#    unit_of_measurement: kWh
#    accuracy_decimals: 3
#    filters:
#      - multiply: 0.001
#    icon: mdi:hours-24

#########################################################################
# PC191HA basic switch operation - button, relay and LED
#

 # The power relay, controls the socket being On/Off
switch:          
  - platform: gpio
    name: "GPO Switch"
    pin: P6
    id: relay
    restore_mode: "${relay_restore_mode}"   # default when power is turned on
    icon: mdi:power-socket-au
     # synchronise the LED with the relay
    on_turn_on:
      then:
        - light.turn_on: button_led
    on_turn_off:
      then:
        - light.turn_off: button_led
    web_server_sorting_weight: 10

light:
  - platform: status_led
    name: "GPO Status LED"
    id: button_led
    restore_mode: RESTORE_AND_OFF
    disabled_by_default: true
    pin:
      number: GPIO26
    web_server_sorting_weight: 11
