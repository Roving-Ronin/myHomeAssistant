#########################################################################
#
# Device configuration for Athom Wall Switch, with neutral (ESP8285)
#

##########################################################################
# VERSION UPATES:
#
# v0.1.0 - Upate to use Roving Ronin base configurations
#

substitutions:
  # Default name
  name: "switch-front-door"
  # Default friendly name
  friendly_name: "Switch - Front Door"
  # Description as appears in ESPHome & top of webserver page
  device_description: "Athom - Light Switch for Front Door, Hallway, Garage and Bedroom Eaves"
  # Project Name
  project_name: "Athom Technology.Light Switch 4 Gang"
  # Projection version denotes the release version of the yaml file, allowing checking of deployed vs latest version
  project_version: "v1.2.0"
  # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc  
  location: "Front Door"
  # The phase in the home power supply, upon which this device is utilsed. 1p = A. 3p = A, B or C.  (myHome GPO 1 = Phase C, GPO 2 = Phase A, GPO 3 = Phase B)  
  power_circuit: "Lights"

  # Restore the relay (GPO switch) upon reboot to state:
  switch1_restore_mode: RESTORE_DEFAULT_OFF
  switch2_restore_mode: RESTORE_DEFAULT_OFF
  switch3_restore_mode: RESTORE_DEFAULT_ON
  switch4_restore_mode: RESTORE_DEFAULT_ON
  
  # Restore the Light / Button and VIRTUAL Relays upon reboot to state:
  light1_restore_mode: RESTORE_DEFAULT_OFF
  light2_restore_mode: RESTORE_DEFAULT_OFF
  light3_restore_mode: RESTORE_DEFAULT_OFF
  light4_restore_mode: RESTORE_DEFAULT_OFF
  
  # Button Label Names
  button1_assignment: "Hallway Light"
  button2_assignment: "Bedroom Eave Lights"
  button3_assignment: "Garage Eave Lights"
  button4_assignment: "Front Door Light"

  # Backlight LED Name:
  backlight1_assignment: "Hallway"
  backlight2_assignment: "Bedroom Eave"
  backlight3_assignment: "Garage Eave"
  backlight4_assignment: "Front Door"

   # Define logging level: NONE, ERROR, WARN, INFO, DEBUG (Default), VERBOSE, VERY_VERBOSE
  log_level: "INFO"
  
########################## End of Substitutions #########################
#
# Defines the type of ESP chip used on the device
#
esp8266:
  board: esp8285
  restore_from_flash: true

logger:
  baud_rate: 115200

preferences:
   # Enable to allow storing of 'Read Total' between reboots and flashing.
  flash_write_interval: 30min


#########################################################################
#
# Remote Packages to be utilised
#

dashboard_import:
  package_import_url: github://roving-ronin/myhomeassistant/esphome/light-switch-front-door.yaml@main
  import_full_config: false


packages:
  base-config:
    url: https://github.com/roving-ronin/myhomeassistant
    ref: main
    files: [esphome/common/base-configuration.yaml]
    refresh: 1h
    
  network_config:
    url: https://github.com/roving-ronin/myhomeassistant
    ref: main
    files: [esphome/common/network-wifi.yaml]
    refresh: 1h

  webserver_groups:
    url: https://github.com/roving-ronin/myhomeassistant
    ref: main
    files: [esphome/common/webserver-groups.yaml]
    refresh: 5s

#####################################################################
#
# External Components
#

# Dentra Components - Adds 'Platform - Energy Statistics'
# https://github.com/Roving-Ronin/myHomeAssistant/tree/main/components/energy_statistics

external_components:
  - source:
      type: git
      url: https://github.com/roving-ronin/myhomeassistant/
      ref: main
    refresh: 1h
    components: [ usage_tracker ]


  - source:
      type: git
      url: https://github.com/Cossid/TasmotaDeviceGroupsForESPHome
      ref: main
    refresh: 1h
    components: [ device_groups ]


#####################################################################
#
# Tasmota Device Groups for ESPHome
#

# Electrical Wiring - NOT CONNECTED - Slave to RELAY 3 on 'Switch Kitchen'
device_groups:
  - group_name: "hallway-light"        # Tasmota device group name
    send_mask: 0xFFFFFFFF              # Optional, defaults to 0xFFFFFFFF (send everything).  Can be integer or hex
    receive_mask: 0xFFFFFFFF           # Optional, defaults to 0xFFFFFFFF (receive everything).  Can be integer or hex
    lights:
      - light1                         # ESPHome entity id

# Electrical Wiring - RELAY 2 ON 24x7 - Master Bedroom Eave LED Lights
  - group_name: "bedroom-eave-lights"  # Tasmota device group name
    send_mask: 0xFFFFFFFF              # Optional, defaults to 0xFFFFFFFF (send everything).  Can be integer or hex
    receive_mask: 0x0                  # Optional, defaults to 0xFFFFFFFF (receive everything).  Can be integer or hex
    lights:
      - light2                         # ESPHome entity id

# Electrical Wiring - RELAY 3 ON 24x7 - Garage Eave LED Lights
  - group_name: "garage-eave-lights"  # Tasmota device group name
    send_mask: 0xFFFFFFFF              # Optional, defaults to 0xFFFFFFFF (send everything).  Can be integer or hex
    receive_mask: 0x0                  # Optional, defaults to 0xFFFFFFFF (receive everything).  Can be integer or hex
    lights:
      - light3                         # ESPHome entity id


# Electrical Wiring - RELAY 4 ON 24x7 - Patio (Front Door) LED Light
  - group_name: "front-door-light"  # Tasmota device group name
    send_mask: 0xFFFFFFFF              # Optional, defaults to 0xFFFFFFFF (send everything).  Can be integer or hex
    receive_mask: 0x0                  # Optional, defaults to 0xFFFFFFFF (receive everything).  Can be integer or hex
    lights:
      - light4                         # ESPHome entity id


#####################################################################
#
# Combined with web_server settings in /common/base-configuration to
# define a network information group
#

web_server:
  sorting_groups:
    
    - id: group_light_switches
      name: "Light Switches"
      sorting_weight: -30

    - id: group_light_usage
      name: "Light Statistics"
      sorting_weight: -20


#####################################################################
#
#
#
esphome:
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - select.set_index:
            id: relay_power_mode
            index: !lambda return id(relay_restore_mode) - 1;
        - lambda: |-
            // Light restore logic
              switch(id(restore_mode))
              {
              case 1:{
                      id(light1).turn_off();
                      id(light2).turn_off();
                      id(light3).turn_off();
                      id(light4).turn_off();
                      break;
                            }
              case 2:{
                      id(light1).turn_on();
                      id(light2).turn_on();
                      id(light3).turn_on();
                      id(light4).turn_on();
                      break;
                            }
              default:{
                      break;
                            }
              }

            // Physical Relay restore logic
              switch(id(relay_restore_mode))
              {
              case 1:{
                      id(relay3).turn_off();
                      id(relay4).turn_off();
                      break;
                            }
              case 2:{
                      id(relay3).turn_on();
                      id(relay4).turn_on();
                      break;
                            }
              default:{
                      break;
                            }
            }

#########################################################################
#
# Globals to save values to NVS RAM
#

globals:
  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "3"

  - id: relay_restore_mode
    type: int
    restore_value: yes
    initial_value: "3"


#########################################################################
#
# Select action to set default power on state
#

select:

  # Controls the Button / Lights / Virtual Relays
  - platform: template
    name: "Power On State"
    id: "power_mode"
    optimistic: true
    icon: 'mdi:electric-switch'
    options:
      - Always Off
      - Always On
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(restore_mode)=i+1;
    entity_category:  config

  # Control the Switches and Physical Relays
  - platform: template
    name: "Relay Power On State"
    id: "relay_power_mode"
    optimistic: true
    icon: 'mdi:electric-switch'
    options:
      - Always Off
      - Always On
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(relay_restore_mode)=i+1;
    entity_category:  config

#########################################################################
#
# Binary Sensors
#
binary_sensor:

  # Touch Button 1
  - platform: gpio
    pin:
      inverted: true
      number: GPIO12
    name: ${button1_assignment}
    id: button1
    icon: 'mdi:gesture-tap-button'
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - light.toggle: light1
      - timing:
          - ON for at least 4s
        then:
          - button.press: Reset
    internal: true 

  # Touch Button 2
  - platform: gpio
    pin:
      inverted: true
      number: GPIO3
    name: ${button2_assignment}
    id: button2
    icon: 'mdi:gesture-tap-button'
    disabled_by_default: true
    on_click:
      max_length: 0.5s
      then:
        - light.toggle: light2
    internal: true

  # Touch Button 3  
  - platform: gpio
    pin:
      inverted: true
      number: GPIO5
    name: ${button3_assignment}
    id: button3
    icon: 'mdi:gesture-tap-button'
    disabled_by_default: true
    on_click:
      max_length: 0.5s
      then:
        - light.toggle: light3
    internal: true

  # Touch Button 4
  - platform: gpio
    pin:
      inverted: true
      number: GPIO16
    name: ${button4_assignment}
    id: button4
    icon: 'mdi:gesture-tap-button'
    disabled_by_default: true
    on_click:
      max_length: 0.5s
      then:
        - light.toggle: light4
    internal: true


    # Binary sensor that tracks of the Light (id: downlight) is ON or OFF.
    # This is used by the usage_tracker as its source sensor.
  - platform: template
    name: "Light 1 - State"
    id: light1_state
    lambda: |-
      return id(light1).current_values.is_on();
    internal: true

    # Binary sensor that tracks of the Light (id: downlight) is ON or OFF.
    # This is used by the usage_tracker as its source sensor.
  - platform: template
    name: "Light 2 - State"
    id: light2_state
    lambda: |-
      return id(light2).current_values.is_on();
    internal: true

    # Binary sensor that tracks of the Light (id: downlight) is ON or OFF.
    # This is used by the usage_tracker as its source sensor.
  - platform: template
    name: "Light 3 - State"
    id: light3_state
    lambda: |-
      return id(light3).current_values.is_on();
    internal: true

    # Binary sensor that tracks of the Light (id: downlight) is ON or OFF.
    # This is used by the usage_tracker as its source sensor.
  - platform: template
    name: "Light 4 - State"
    id: light4_state
    lambda: |-
      return id(light4).current_values.is_on();
    internal: true


##########################################################################
#
# Relays - Seperate to Lights and Buttons. Controlled directly by SWITCHES
#

#   - Default component used by the Athom 4Gang Switch

output:      
  - platform: gpio
#    name: "Power Switch - Bedroom Eave Lights"
    id: relay2
    pin: GPIO4


###############

switch:
  # Relays

  # Phyiscally not wired into Power Cicruits
#  - platform: gpio
#    name: "Power Switch - Hallway Light"
#    id: relay1
#    pin: GPIO13

  - platform: gpio
    name: "Power Switch - Garage Eave Lights"
    id: relay3
    pin: GPIO15
    restore_mode: switch3_restore_mode

  - platform: gpio
    name: "Power Switch - Front Door Light"
    id: relay4
    pin: GPIO14
    restore_mode: switch4_restore_mode


##########################

 # HALLWAY LIGHT - Virtual Relay to replace the relay1 that isn't wired to anything
  - platform: template
    id: virtual_relay1
    type: binary
    write_action:
      lambda: |-
        ESP_LOGD("virtual_relay1", "Virtual output state changed to %s", state ? "ON" : "OFF");
        // Add any custom logic here if needed, e.g., triggering another action
        // For a purely virtual output, you can leave this minimal


 # BEDROOM EAVE LIGHTS - Virtual Relay to replace the relay2 that supplies power to the Master Bedroom Eave Lights
 # that need power 24x7 and the Switch Button 2 sends Tasmota Group On/Off command only
  - platform: template
    id: virtual_relay2
    type: binary
    write_action:
      - logger.log:
          format: "Virtual Relay 2 - Bedroom Eave Lights - state changed to %s"
          args: ['state ? "ON" : "OFF"']


 # GARAGE EAVE LIGHTS - Virtual Relay to replace the relay3 that supplies power to the Master Bedroom Eave Lights
 # that need power 24x7 and the Switch Button 3 sends Tasmota Group On/Off command only
  - platform: template
    id: virtual_relay3
    type: binary
    write_action:
      - logger.log:
          format: "Virtual Relay 3 - Garage Eave Lights - state changed to %s"
          args: ['state ? "ON" : "OFF"']


 # PARIO LIGHT - Virtual Relay to replace the relay4 that supplies power to the Front Door / Patio Light
 # that need power 24x7 and the Switch Button 4 sends Tasmota Group On/Off command only
  - platform: template
    id: virtual_relay4
    type: binary
    write_action:
      - logger.log:
          format: "Virtual Relay 4 - Front Door Light - state changed to %s"
          args: ['state ? "ON" : "OFF"']


##########################################################################
#
# Lights
#
light:

  # Relays
  - platform: binary
    name: ${button1_assignment}
    id: light1
    output: virtual_relay1      # relay1
    restore_mode: ${light1_restore_mode}
    icon: 'mdi:lightbulb'
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 1
      
  - platform: binary
    name: ${button2_assignment}
    id: light2
    output: relay2       # virtual_relay2 - Swap when Aldi Casalux LED installed in Eaves
    restore_mode: ${light2_restore_mode}
    icon: 'mdi:lightbulb'
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 2
    
  - platform: binary
    name: ${button3_assignment}
    id: light3
    output: virtual_relay3      # relay3
    restore_mode: ${light3_restore_mode}
    icon: 'mdi:lightbulb'
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 3
    
  - platform: binary
    name: ${button4_assignment}
    id: light4
    output: virtual_relay4      # relay4
    restore_mode: ${light4_restore_mode}
    icon: 'mdi:lightbulb'
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 4

  # ESP PCB Light
  - platform: status_led
    name: "Status LED"
    icon: 'mdi:wifi-alert'
    disabled_by_default: true
    pin:
      number: GPIO0
      inverted: true
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 5


##########################################################################
