substitutions:
  # Default name
  name: "athom-smart-plug-v2"
  # Default friendly name 
  friendly_name: "Smart Plug v2"
  # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc
  device_description: "Athom Plug v2 - Smart Plug (ESP8285)"
  # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc    
  location: ""
  project_name: "Athom Technology.Smart Plug v2"
  # Project version denotes the release version of the yaml file, allowing checking of deployed vs latest version  
  project_version: "2.0.5"
  # The phase in the home power supply, upon which this plug is utilsed. 1p = A. 3p = A, B or C.  (myHome GPO 1 = Phase C, GPO 2 = Phase A, GPO 3 = Phase B)
  power_circuit: "TBC" 
  # Restore the relay (GPO switch) upon reboot to state:
  relay_restore_mode: RESTORE_DEFAULT_ON

  # cse7766 Power Monitoring Chip  
  # Current Limit in Amps. AU Plug = 10. IL, BR, EU, UK, US Plug = 16.
  current_limit : "10"

########################## End of Substitutions #########################
#
# Defines the type of ESP chip used on the device
#

esp8266:
  board: esp8285
  restore_from_flash: true

#########################################################################
#
# Remote Packages to be utilised
#

dashboard_import:
  package_import_url: github://roving-ronin/myhomeassistant/esphome/athom-smart-plug-v2.yaml@main
  import_full_config: false

packages:
  base-config: !include common/base-configuration.yaml
  wifi-config: !include common/network-wifi.yaml
  
#####################################################################
#
# Used to store the Total kWh used (lifetime) between reboots
#

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0'

#####################################################################
#
# Define the COMs Port
#

uart:
  rx_pin: RX
  baud_rate: 4800

#####################################################################
#
# Binary Sensors
#

binary_sensor:

    # Defines the Power On/Off button and its GPIO PIN#
  - platform: gpio
    pin:
      number: 5
      mode: INPUT_PULLUP
      inverted: true
    name: "Power Button"
    disabled_by_default: true
    on_multi_click:
      - timing:
        - ON for at most 1s
        - OFF for at least 0.2s
        then:
          - switch.toggle: relay
      - timing:
        - ON for at least 4s
        then:
          - button.press: Reset
    internal: true

#####################################################################
#
# Power / Current / Energy monitoring sensors. 
# The chipset used is self calibrating, so no tuning is required.
#
sensor:

  - platform: cse7766
    current:
      name: "Current"
      id: current
      unit_of_measurement: A
      accuracy_decimals: 2
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.060) return 0.0; else return x;   #For the chip will report less than 3w power when no load is connected
      on_value_range:
        - above: ${current_limit}
          then:
            - switch.turn_off: relay

    voltage:
      name: "Voltage"
      id:   voltage
      unit_of_measurement: V
      accuracy_decimals: 1      
      filters:
        - throttle_average: ${sensor_update_interval}

    power:
      name: "Active Power"
      id: active_power
      unit_of_measurement: W
      accuracy_decimals: 1     
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 3.0) return 0.0; else return x;    #For the chip will report less than 3w power when no load is connected
      icon: mdi:power  

    apparent_power:
      name: "Apparent Power"
      unit_of_measurement: VA
      accuracy_decimals: 1       
      filters:
        - throttle_average: ${sensor_update_interval}
      icon: mdi:power        
    
    power_factor:
      name: "Power Factor"
      filters:
        - throttle_average: ${sensor_update_interval}

    energy:
      name: "Energy"
      id: energy
      unit_of_measurement: kWh
      accuracy_decimals: 3      
      filters:
        - throttle: ${sensor_update_interval}
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(energy_total_sensor).update();

#########################################################################

    # Shows the TOTAL/Lifetime Energy kWh used by the device, may reset to zero upon firmware updates
  - platform: template
    name: "Energy Total"
    id: energy_total_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    icon: "mdi:lightning-bolt"
    accuracy_decimals: 3
    lambda: |-
      return id(total_energy);

    # Shows the Energy kWh for the current day
  - platform: total_daily_energy
    name: "Energy Daily"
    id: energy_total_daily
    restore: true
    power_id: active_power
    unit_of_measurement: kWh
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    icon: mdi:hours-24

#########################################################################
#
# Configures basic switch operation - Bbutton that manually controls
# the GPO socket relay and controls the blue LED backlight.
#

switch:
  - platform: gpio
    name: "GPO Switch"
    pin: GPIO12
    id: relay
    restore_mode: ${relay_restore_mode}
    icon: mdi:power-socket-au

light:
  - platform: status_led
    name: "GPO Status LED"
    id: blue_led
    disabled_by_default: true
    pin:
      inverted: true
      number: GPIO13

#########################################################################
