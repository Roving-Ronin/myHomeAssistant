#########################################################################
#
# Device configuration for Athom Wall Switch - 1 Gang v1, with neutral (ESP8285)
# 
# v1.0.0 - 22nd May 2025
#
##########################################################################
# VERSION UPATES:
#
# v0.1.0 - Upate to use Roving Ronin base configurations
#
substitutions:
  # Default name
  name: "switch-1gang"
  # Default friendly name
  friendly_name: "Switch - 1 Gang"
  # Description as appears in ESPHome & top of webserver page
  device_description: "Athom - Light Switch 1 Gang"
  # Project Name
  project_name: "Athom Technology.Light Switch 1 Gang"
  # Projection version denotes the release version of the yaml file, allowing checking of deployed vs latest version
  project_version: "v1.3.0"
  # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc  
  location: ""
   # The phase in the home power supply, upon which this device is utilsed. A, B or C.  (myHome GPO 1 = Phase A, GPO 2 = Phase B, GPO 3 = Phase C)  
  power_phase: "A"
   # The circuit breaker / RCBO that the load is attached to.  
  power_rcbo: "Lights"
  # Restore the relay (GPO switch) upon reboot to state:
  light_restore_mode: RESTORE_DEFAULT_OFF
  # Define logging level: NONE, ERROR, WARN, INFO, DEBUG (Default), VERBOSE, VERY_VERBOSE
  log_level: "ERROR"

########################## End of Substitutions #########################
#
# Defines the type of ESP chip used on the device
#

esp8266:
  board: esp8285
  restore_from_flash: true

logger:
  baud_rate: 115200

preferences:
   # Enable to allow storing of 'Read Total' between reboots and flashing.
  flash_write_interval: 30min

#########################################################################
#
# Remote Packages to be utilised
#

dashboard_import:
  package_import_url: github://roving-ronin/myhomeassistant/esphome/athom-wall-switch-1gang.yaml@main
  import_full_config: false


packages:
  base-config:
    url: https://github.com/roving-ronin/myhomeassistant
    ref: main
    files: [esphome/common/base-configuration.yaml]
    refresh: 5s
    
  network_config:
    url: https://github.com/roving-ronin/myhomeassistant
    ref: main
    files: [esphome/common/network-wifi.yaml]
    refresh: 5s

  webserver_groups:
    url: https://github.com/roving-ronin/myhomeassistant
    ref: main
    files: [esphome/common/webserver-groups.yaml]
    refresh: 5s

#####################################################################
#
# External Components
# See: https://github.com/Roving-Ronin/myHomeAssistant/tree/main/components/energy_statistics
#

#external_components:
#  - source:
#      type: git
#      url: https://github.com/roving-ronin/myhomeassistant/
#      ref: main
#    refresh: 1s
#    components: [ usage_tracker ]

#####################################################################
#
# Combined with web_server settings in /common/base-configuration to
# define a network information group
#

web_server:
  include_internal: true
  sorting_groups:
    
    - id: group_light_switches
      name: "Light Switches"
      sorting_weight: -28

#    - id: group_light_usage
#      name: "Light Statistics"
#      sorting_weight: -20

#########################################################################
#
#
#

esphome:
  # this board has 2mb flash, but esphome assumes 1mb for the 8285 board id
  platformio_options:
    board_upload.flash_size: 2MB
    board_upload.maximum_size: 2097152
    board_build.ldscript: eagle.flash.2m.ld
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - lambda: |-
              switch(id(restore_mode))
              {
              case 1:{
                      id(light1).turn_off();
                      break;
                            }
              case 2:{
                      id(light1).turn_on();
                      break;
                            }
              default:{
                      break;
                            }
              }



#########################################################################
#
# Globals to save values to NVS RAM
#

globals:
  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "3"


#########################################################################
#
# Select action to set default power on state
#

select:
  - platform: template
    name: "Power On State"
    id: "power_mode"
    icon: 'mdi:electric-switch'
    optimistic: true
    options:
      - Always Off
      - Always On
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(restore_mode)=i+1;
    entity_category: config

#########################################################################
#
# Binary Sensors
#

binary_sensor:

    # Touch Button
  - platform: gpio
    pin:
      inverted: true
      number: GPIO3
      mode:
        input: true
        pullup: true
    name: "Button"
    id: button1
    icon: 'mdi:gesture-tap-button'
    on_multi_click:
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - light.toggle: light1
      - timing:
          - ON for at least 4s
        then:
          - button.press: Reset
    internal: true
    disabled_by_default: true


    # Binary sensor that tracks of the Light (id: downlight) is ON or OFF.
    # This is used by the usage_tracker as its source sensor.
  - platform: template
    name: "Light State"
    id: light_state
    icon: 'mdi:state-machine'
    lambda: |-
      return id(light1).current_values.is_on();
    internal: true
    disabled_by_default: true


##########################################################################
#
# Relays
#

output:
  # Relay
  - platform: gpio
    pin: GPIO13
    id: relay1

  # Button LED (1.0 = Blue / 0.0 = Red)
  - platform: esp8266_pwm
    pin: GPIO14                        # v2 = 16
    inverted: true
    id: button_led1


##########################################################################
#
# Lights
#

light:

  # Relay
  - platform: binary
    name: "Light"
    id: light1
    icon: 'mdi:lightbulb'
    output: relay1
    restore_mode: ${light_restore_mode}
    on_turn_on:
      - light.turn_on: led1
    on_turn_off:
      - light.turn_off: led1
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 1

  # Button LED
  - platform: monochromatic
    name: "Backlight LED"
    icon: 'mdi:led-on'
    disabled_by_default: true
    id: led1
    output: button_led1
    default_transition_length: 500ms
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 2


  - platform: status_led
    name: "Status LED"
    icon: 'mdi:wifi-alert'
    disabled_by_default: true
    pin:
      number: GPIO0
      inverted: true
    web_server:
      sorting_group_id: group_light_switches
      sorting_weight: 3

#########################################################################
#
# Define the sensors that publish the Last Use & Lifetime Use duration of the LED.
# See: https://github.com/Roving-Ronin/myHomeAssistant/tree/main/components/usage_tracker
#

#sensor:
#  - platform: "usage_tracker"
#    id: usage_tracker_component
#    on_off_sensor: light_state
      
#    last_use:
#      name: "Duration Last Use"
#      id: duration_last_use
#      unit_of_measurement: h
#      accuracy_decimals: 3
#      filters:
#        - lambda: |-
#            return x / 3600.0;
#        - delta: 0.001
#      web_server:
#        sorting_group_id: group_light_usage
#        sorting_weight: 1

#    lifetime_use:
#      name: "Duration Lifetime Use"
#      id: duration_lifetime_use
#      unit_of_measurement: h
#      accuracy_decimals: 3
#      filters:
#        - lambda: |-
#            return x / 3600.0;
#        - delta: 0.001
#      web_server:
#        sorting_group_id: group_light_usage
#        sorting_weight: 2
      
#########################################################################
