#########################################################################
#
# Aldi Casalux - LED Downlight with Cold White/ Warm White template
#

   # Provides substitutions or variables that are then called elsewhere multiple times in the config
substitutions:
   # Default name 
  name: "aldi-casalux-led-downlight"
   # Default friendly name 
  friendly_name: "Aldi - Casalux - LED Downlight"
   # Description as appears in ESPHome & top of webserver page
  device_description: "Aldi Casalux Smart LED Downlight - 8W CW/WW"
   # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc  
  location: ""
   # Project Name
  project_name: "Aldi Casalux.Smart LED Downlight CW/WW"
   # Project version denotes the release version of the yaml file, allowing checking of deployed vs latest version
  project_version: "1.0.12"
  # The phase in the home power supply, upon which this plug is utilsed. 1p = A. 3p = A, B or C.  (myHome GPO 1 = Phase C, GPO 2 = Phase A, GPO 3 = Phase B)
  power_circuit: "TBC"  
   # Restore the relay (Light switch) upon reboot to state:
  light_restore_mode: RESTORE_DEFAULT_OFF
   # Set your locations latitude and longitude. Useful if you want to use the sun and its location in relation to the horizon to on/off (or as a condition) to control lights.
  my_latitude: "-34.73503534407444"
  my_longitude: "149.72998380661014"
   # From: https://esphome.io/components/output/ledc.html
  frequency_cw: "1220Hz"
  frequency_ww: "1220Hz"
   # Set the default colour temperature desired (min. 2700 K / max. 65000 K). 3000 K = Warm White, 4000 K = Cool White, 5000 K = Daylight, 6500 K = Cool Daylight.
   # Normally this can be left at '6500 K' and is defined in Home Assistant Automation / Blueprints, where they can be varied per automation/blueprint used.
  default_colour_temperature: "6500 K"
  
########################## End of Substitutions #########################

esphome:
  on_boot:
    priority: 600.0
    then:
      - light.turn_on: 
          id: downlight
          brightness: 100%
          color_temperature: 6500K
#          color_mode: COLOR_TEMPERATURE
      - delay: 2.5s
      - light.turn_off:
          id: downlight

#########################################################################
#
# Defines the bk72xx chip that is a cheaper alternative to an ESP828x
#

#bk72xx:
#  board: generic-bk7231t-qfn32-tuya

#########################################################################
#
# Remote Packages to be utilised
#

dashboard_import:
  package_import_url: github://roving-ronin/myhomeassistant/esphome/aldi-casalux-smart-led-cwww.yaml@main
  import_full_config: false

packages:
  base-config: !include common/base-configuration.yaml
  wifi-config: !include common/network-wifi.yaml


#########################################################################
#
# Components and sensors defined in base-configuration.yaml that are
# to be to be disabled, as not compatible or needed with this device.
#

 # Remove Network section (IPv6), as not supported on this chipset
network: !remove
  
#########################################################################
#
# Define the RGBW Lights and their GPIO PINS to control them.
#

output:
  - platform: libretiny_pwm
    id: output_cold_white
    max_power: 100%
    frequency: ${frequency_cw}
    pin: P7
    inverted: True

  - platform: libretiny_pwm
    id: output_warm_white
    pin: P8
    max_power: 100%
    frequency: ${frequency_ww}

#########################################################################
#
# Define the RGBW LEDs as a device type 'Light'.
# See: https://esphome.io/components/light/cwww.html
#

light:
  - platform: cwww
    name: "Downlight"
    id: downlight
    cold_white: output_cold_white
    warm_white: output_warm_white
    cold_white_color_temperature: 6500 K
    warm_white_color_temperature: 2700 K
    gamma_correct: 2.8
    default_transition_length: 0.5s
    restore_mode: ${light_restore_mode}
     # When enabled, this will prevent white leds being on at the same time as RGB leds.
    constant_brightness: true
     # Reset the light to a predefined state each time it is turned on
    on_turn_on: 
      then:
        - light.control:
            id: downlight
            color_temperature: "${default_colour_temperature}"
#            color_mode: COLOR_TEMPERATURE

#########################################################################
#
# Define LAT & LONG, allowing local checking triggers such as:
# Event on_sunrise / on_sunset etc, see: https://esphome.io/components/sun.html
#

sun:
  latitude: "${my_latitude}"
  longitude: "${my_longitude}"
  id: sun_home

#########################################################################
