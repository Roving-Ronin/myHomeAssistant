#####################################################################
#
# This file contains all the common sensors that are used by
# Athom v2 and v3 Power Plugs.
#

esphome:
  on_boot:
    - priority: 600
      then:
        - select.set_index:
            id: power_mode
            index: !lambda |-
                    return id(restore_mode)-1;
        - lambda: |-
              switch(id(restore_mode))
              {
              case 1:{
                      id(relay).turn_off();
                      break;
                            }
              case 2:{
                      id(relay).turn_on();
                      break;
                            }
              default:{
                      break;
                            }
              }

#####################################################################
#
# External Components
#

# Dentra Components - Adds 'Platform - Energy Statistics'
# https://github.com/dentra/esphome-components/tree/master/components/energy_statistics

external_components:
  - source: github://roving-ronin/myhomeassistant/components@globals
    refresh: 5s

#####################################################################
#
# Used to store the Total kWh used (lifetime) between reboots
#

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0' 

  - id: restore_mode
    type: int
    restore_value: yes
    initial_value: "1"


#####################################################################
#
# Select - To allow setting power on state from the GUI
#

select:
  - platform: template
    name: "Power On State"
    id: "power_mode"
    optimistic: true
    icon: "mdi:electric-switch"
    options:
      - Always Off
      - Always On
      - Restore Power Off State
    on_value:
      then:
        - lambda: |-
            id(restore_mode)=i+1;
            
#####################################################################
#
# Binary Sensors
#

binary_sensor:

    # Defines the Power On/Off button and its GPIO PIN#
  - platform: gpio
    pin:
      number: ${power_button_pin}
      mode: INPUT_PULLUP
      inverted: true
    id: power_button
    name: "Power Button"
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - switch.toggle: relay
      - timing:
          - ON for at least 4s
        then:
          - button.press: Reset
    internal: true

#####################################################################
#
# Power / Current / Energy monitoring sensors. 
# The chipset used is self calibrating, so no tuning is required.
#

sensor:

  - platform: cse7766
    power:
      name: "Active Power"
      id: active_power
      unit_of_measurement: W
      accuracy_decimals: 1         
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.3) return 0.0; else return x;    #For the chip will report less than 3w power when no load is connected
      icon: "mdi:power"
      web_server_sorting_weight: 1

    apparent_power:
      name: "Apparent Power"
      unit_of_measurement: VA
      accuracy_decimals: 1         
      filters:
        - throttle_average: ${sensor_update_interval}
      icon: "mdi:power"
      web_server_sorting_weight: 2
      
    current:
      name: "Current"
      id: current
      unit_of_measurement: A
      accuracy_decimals: 2
      icon: "mdi:current-ac"
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.060) return 0.0; else return x;   #For the chip will report less than 3w power when no load is connected
      on_value_range:
        - above: ${current_limit}
          then:
            - switch.turn_off: relay
      web_server_sorting_weight: 3

    voltage:
      name: "Voltage"
      id:   voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      icon: "mdi:sine-wave"
      filters:
        - throttle_average: ${sensor_update_interval}
      web_server_sorting_weight: 4

    power_factor:
      name: "Power Factor"
      filters:
        - throttle_average: ${sensor_update_interval}
      icon: "mdi:percent-outline"
      web_server_sorting_weight: 5

    energy:
      name: "Energy"
      id: energy
      unit_of_measurement: kWh
      accuracy_decimals: 3      
      filters:
        - throttle: ${sensor_update_interval}
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(energy_total_sensor).update();
      internal: true

#####################################################################
#
# Function added by the Dentra Components
#

     # Dentra Components - Define the id of the sensor tracking 'Total Energy' used
  - platform: "energy_statistics"
    total: energy_total_sensor
    
     # Dentra Components - Adds Energy Today. Persistents if restarted, unlike 'total_daily_energy'
    energy_today:
      name: "Energy Today"
      id: total_energy_today_sensor
      accuracy_decimals: 3
      icon: "mdi:hours-24"
      web_server_sorting_weight: 6

     # Dentra Components - Adds Energy Yesterday
    energy_yesterday:
      name: "Energy Yesterday"
      id: total_energy_yesterday_sensor
      accuracy_decimals: 3
      icon: "mdi:calendar-today"
      web_server_sorting_weight: 7

     # Dentra Components - Adds Energy Week
    energy_week:
      name: "Energy Week"
      id: total_energy_week_sensor
      accuracy_decimals: 3
      icon: "mdi:calendar-week"
      web_server_sorting_weight: 8

     # Dentra Components - Adds Energy Month
    energy_month:
      name: "Energy Month"
      id: total_energy_month_sensor
      accuracy_decimals: 3
      icon: "mdi:calendar-month"
      web_server_sorting_weight: 9

    energy_year:
      name: "Energy Year"
      id: total_energy_year_sensor
      accuracy_decimals: 3
      icon: "mdi:calendar-text"
      web_server_sorting_weight: 10

#########################################################################

    # Shows the TOTAL/Lifetime Energy kWh used by the device, will be reset to zero upon firmware updates though.
  - platform: template
    name: "Energy Total"
    id: energy_total_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    accuracy_decimals: 3
    icon: "mdi:lightning-bolt"
    lambda: |-
      return id(total_energy);
    web_server_sorting_weight: 11
   
#  - platform: total_daily_energy
#    name: "Energy Total Today"
#    id: energy_total_today
#    restore: true
#    power_id: active_power
#    unit_of_measurement: kWh
#    accuracy_decimals: 3
#    filters:
#      - multiply: 0.001
#    icon: "mdi:hours-24"

#########################################################################
#
# Configures basic switch operation - Bbutton that manually controls
# the GPO socket relay and controls the blue LED backlight.
#

switch:
  - platform: gpio
    name: "GPO Switch"
    pin: ${gpo_switch_pin}
    id: relay
    restore_mode: ${relay_restore_mode}
    icon: "mdi:power-socket-au"
    web_server_sorting_weight: 12

light:
  - platform: status_led
    name: "GPO Status LED"
    id: blue_led
    disabled_by_default: true
    pin:
      inverted: true
      number: ${gpo_status_led_pin}
    icon: "mdi:lightbulb-outline"
    web_server_sorting_weight: 13

#########################################################################
