# https://esphome.io/components/spi
# https://esphome.io/components/sensor/max31855

#########################################################################
#
# Utility - Gas Sensors
# 
# Used to monitor mains feed gas, with a reed sensor connected to the gas
# meter, that has a rotating dial with a magnet inside that can be monitored.
#

substitutions:
  gas_sensor_update_interval: '15s'

#########################################################################
#
# Web_server v3 Sort Groups - These substitutes are applied to overwrite the default ones supplied by the 
# sensor specific template file, in this case the /sensors/hc-sr04-ultrasonic.yaml file.
#

web_server:
  sorting_groups:
    - id: group_fireplace_sensors
      name: "Fireplace Sensors"
      sorting_weight: -38
      
#########################################################################
#
# Example configuration entry - single controller
#

spi:
  - id: max31855a
    miso_pin: 
      number: GPIO15
      mode:
        input: true
    clk_pin: GPIO13

#########################################################################
#
# Sensors
#

# reference_temperature

sensor:
  - platform: max31855
    name: "Firebox - Temperature"
    id: firebox_temperature
    i2c_id: max31855a
    cs_pin: GPIO14
#    Accuracy Decimals: 1
    reference_temperature:
      id: water_heater_left_reference
    icon: 'mdi:fire'
    update_interval: 15s

  - platform: max31855
    name: "Chimney - Temperature"
    id: chimney_temperature
    cs_pin: GPIO23
#    Accuracy Decimals: 1
    reference_temperature:
      id: water_heater_right_reference
    icon: 'mdi:fire'
    update_interval: 15s

binary_sensor:
  - platform: template
    name: "Fireplace - Status"
    id: fireplace_status
    update_interval: 15s
    lambda: |-
      if (id(firebox_temperature).state >= 50 || id(chimney_temperature).state >= 50) {
        return true;
      } else {
        return false;
      }
    icon: |-
      if (id(fireplace_status).state == true) {
        return "mdi:fire";  # Icon for "ON" state
      } else {
        return "mdi:fire-off";  # Icon for "OFF" state
      }

text_sensor:
  - platform: template
    name: "Fireplace - ON|OFF"
    id: fireplace_on_off
    icon: "mdi:fire"
    lambda: |-
      if (id(firebox_temperature).state >= 50 || id(chimney_temperature).state >= 50) {
        return std::string("ON");
      } else {
        return std::string("OFF");
      }
    update_interval: 15s


#########################################################################
